#
# wm independent hotkeys
#

# increase/decrease speaker volume
{XF86AudioLowerVolume, XF86AudioRaiseVolume}
  amixer sset 'Master' 5%{-,+}

super + comma
  bspc node @parent --ratio 0.01

super + period
  bspc node @parent --ratio 0.5

super + F4
  playerctl --player=netease-cloud-music play-pause

super + F5
  playerctl --player=netease-cloud-music next

super + F6
  playerctl --player=netease-cloud-music previous

super + {minus,equal}
  bspc config window_gap $(( $(bspc config window_gap) {+,-} 1 ))

super + p
  python ~/.config/bspwm/ResetPadding.py; \
  pgrep polybar || /home/toor/.config/polybar/launch.sh & \
  polybar-msg cmd toggle

#super + P
  #pgrep picom && killall picom || picom --experimental-backends -b

super + g
	python ~/.config/bspwm/ToggleGap.py

super + b
  python ~/.config/bspwm/ToggleBorder.py

super + c
  python ~/.config/bspwm/ToggleRoundBorder.py

super + d
  rofi -show window -theme clean -normal-window

# terminal emulator
super + Return
	alacritty

# nautilus
super + {_,shift + }e
  {alacritty -e ranger, thunar}

# program launcher
super + space
  gapplication launch io.ulauncher.Ulauncher

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
#super + alt + {q,r}
	#bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
# #bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,f,s}
	bspc node -t {tiled,pseudo_tiled,fullscreen,floating}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
	#bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
alt + {_,shift + }Tab
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 10 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-1 0,0 1,0 -1,1 0}

# move focused window to the next workspace and then switch to that workspace
alt + shift + {Left,Right}
    id=$(bspc query --nodes --node); bspc node --to-desktop {prev,next}; bspc desktop --focus next; bspc node --focus ${id}

# music
ctrl + alt + p
    playerctl -p ElectronNCM play-pause
ctrl + alt + Left
    playerctl -p ElectronNCM previous
ctrl + alt + Right
    playerctl -p ElectronNCM next
ctrl + shift + a
    flameshot gui
